generator client {
  provider = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  items     Item[]
  groups  GroupUser[]
}

model Group {
  id      Int     @id @default(autoincrement())
  members GroupUser[]
  items   GroupItem[]
}

model GroupUser {
  groupId Int
  group   Group @relation(fields: [groupId], references: [id])
  userId  Int
  user    User  @relation(fields: [userId], references: [id])

  @@id([groupId, userId])
}

enum ItemType {
  MESSAGE
  FILE
}

model Item {
  id        Int      @id @default(autoincrement())
  url       String   @unique
  sharedBy  Int      @map("shared_by")
  user      User     @relation(fields: [sharedBy], references: [id])
  groups    GroupItem[]
  type      ItemType
  createdAt DateTime?
  updatedAt DateTime?
}

model GroupItem {
  groupId Int
  group   Group @relation(fields: [groupId], references: [id])
  itemId  Int
  item    Item  @relation(fields: [itemId], references: [id])

  @@id([groupId, itemId])
}

// Putting in Postgres for now.
// Used to live in Redis
model Upload {
  id        String      @unique
  owner     String
  metadata  String
  dlimit    Int
  auth      String
  nonce     String
  pwd    Boolean
  // dl     Int
  createdAt DateTime?
}