name: validate

concurrency:
  group: validate
  cancel-in-progress: true

#
on:
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read
  pull-requests: read

jobs:
  # Main filter detecting where in the repo changes have been made, allowing us to be smart about how we respond
  detect-changes:
    runs-on: ubuntu-latest
    environment: staging
    outputs:
      validate-iac: ${{ steps.check.outputs.validate-iac }}
      validate-backend: ${{ steps.check.outputs.validate-backend }}
      validate-frontend: ${{ steps.check.outputs.validate-frontend }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: check
        with:
          filters: |
            validate-iac:
              - 'pulumi/**'
              - '.github/workflows/validate.yml'
#           validate-backend:
#             - 'backend/**'
#             - '.github/workflows/validate.yml'
#           validate-frontend:
#             - 'frontend/**'
#             - '.github/workflows/validate.yml'

  # IAC is Pulumi. We want to run Ruff against it.
  # TODO: Can we auto-run a preview and see if there are errors?
  validate-iac:
#           validate-docs:
#             - 'docs/**'
#             - '.github/workflows/validate.yml'
    permissions: write-all
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: staging
    if: needs.detect-changes.outputs.validate-iac == 'true'
    env: {}
    steps:
      - uses: actions/checkout@v4

      - name: Quick lint with Ruff
        uses: chartboost/ruff-action@v1
        with:
          src: './pulumi'
          args: 'format --check'

  # validate-backend:
  #   needs: detect-changes
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   if: needs.detect-changes.outputs.validate-backend == 'true'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #         cache-dependency-path: 'backend/pnpm-lock.json'
  #     - name: Install dependencies
  #       run: |
  #         cd ./frontend
  #         npm install
  #     - name: Test with vitest
  #       run: |
  #         cd ./frontend && npm run test -- --run
  #     # These Python steps need to be replaced with Node equivalents
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'
  #         cache: 'pip'
  #     - name: Install dependencies
  #       run: |
  #         cd ./backend
  #         python -m pip install --upgrade pip
  #         python -m pip install .'[test]'
  #     - name: Test with pytest
  #       run: |
  #         cd ./backend && python -m pytest

  # validate-frontend:
  #   needs: detect-changes
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   if: needs.detect-changes.outputs.validate-frontend == 'true'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #         cache-dependency-path: 'frontend/package-lock.json'
  #     - name: Install dependencies
  #       run: |
  #         cd ./frontend
  #         npm install
  #     - name: Test with vitest
  #       run: |
  #         cd ./frontend && npm run test -- --run

  # validate-docs:
  #   needs: detect-changes
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   if: needs.detect-changes.outputs.validate-docs == 'true'
  #   env:
  #     FOO: bar
  #   steps:
  #     - uses: actions/checkout@v4
  #     - etc.
