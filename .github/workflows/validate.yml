---
name: validate

concurrency:
  group: validate
  cancel-in-progress: true

on:
  push:
    branches:
      - "**"
      - "!main"

permissions:
  contents: read

jobs:
  # This job detects which parts of the repo have been changed, setting future jobs up for conditional behavior.
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.check.outputs.backend-changed }}
      iac-changed: ${{ steps.check.outputs.iac-changed }}
      frontend-changed: ${{ steps.check.outputs.frontend-changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - uses: dorny/paths-filter@v3
        id: check
        with:
          filters: |
            backend-changed:
              - 'backend/**'
            iac-changed:
              - 'pulumi/**'
              - '.github/workflows/validate.yml'
            frontend-changed:
              - 'frontend/**'

  # When the backend code changes, run these steps
  backend-tests:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    if: needs.detect-changes.outputs.backend-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        id: install-dependencies
        shell: bash
        run: |
          npm install -g pnpm
          pnpm install

      - name: Backend tests
        id: backend-tests
        shell: bash
        run: |
          cd backend
          cp .env.sample .env

          # Certain values here contain "/" characters, which need to be escaped so sed doesn't break
          APP_KEY=$(echo '${{ secrets.TEST_B2_APPLICATION_KEY }}' | sed 's/\//\\\//g')
          B2_ENDPOINT=$(echo '${{ vars.TEST_B2_ENDPOINT }}' | sed 's/\//\\\//g')
          S3_ENDPOINT=$(echo '${{ secrets.TEST_S3_ENDPOINT }}' | sed 's/\//\\\//g')

          sed -i "s/^TEST_B2_REGION=$/TEST_B2_REGION=${{ vars.TEST_B2_REGION }}/" .env
          sed -i "s/^TEST_B2_ENDPOINT=$/TEST_B2_ENDPOINT=$B2_ENDPOINT/" .env
          sed -i "s/^TEST_B2_APPLICATION_KEY=$/TEST_B2_APPLICATION_KEY=$APP_KEY/" .env
          sed -i "s/^TEST_B2_BUCKET_NAME=$/TEST_B2_BUCKET_NAME=${{ vars.TEST_B2_BUCKET_NAME }}/" .env
          sed -i "s/^TEST_B2_APPLICATION_KEY_ID=$/TEST_B2_APPLICATION_KEY_ID=${{ secrets.TEST_B2_APPLICATION_KEY_ID }}/" .env
          sed -i "s/^TEST_S3_REGION=$/TEST_S3_REGION=${{ secrets.TEST_S3_REGION }}/" .env
          sed -i "s/^TEST_S3_ENDPOINT=$/TEST_S3_ENDPOINT=$S3_ENDPOINT/" .env
          sed -i "s/^TEST_S3_ACCESS_KEY=$/TEST_S3_ACCESS_KEY=${{ secrets.TEST_S3_ACCESS_KEY }}/" .env
          sed -i "s/^TEST_S3_SECRET_KEY=$/TEST_S3_SECRET_KEY=${{ secrets.TEST_S3_SECRET_KEY }}/" .env
          sed -i "s/^TEST_S3_BUCKET_NAME=$/TEST_S3_BUCKET_NAME=${{ secrets.TEST_S3_BUCKET_NAME }}/" .env

          pnpm ci:validate || true

  # When Pulumi code or configs change, run these steps
  iac-lint:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    if: needs.detect-changes.outputs.iac-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Ruff formatting checks
        uses: chartboost/ruff-action@v1
        with:
          src: "./pulumi"
          args: "format --check"

      - name: Other linting with Ruff
        uses: chartboost/ruff-action@v1
        with:
          src: "./pulumi"

  # When the frontend code changes, run these steps
  frontend-lint:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        id: install-dependencies
        shell: bash
        run: |
          npm install -g pnpm
          pnpm install

      - name: Create .env file so tests will work
        shell: bash
        run: |
          cd frontend
          cat << EOF > .env
          VUE_BASE_URL=https://send.thunderbird.dev
          VITE_SEND_SERVER_URL=https://lockbox.thunderbird.dev
          VITE_SEND_CLIENT_URL=https://send.thunderbird.dev
          VITE_SENTRY_AUTH_TOKEN=${{ secrets.VITE_SENTRY_AUTH_TOKEN }}
          VITE_SENTRY_DSN=${{ vars.VITE_SENTRY_DSN }}
          VITE_POSTHOG_PROJECT_KEY=${{ secrets.VITE_POSTHOG_PROJECT_KEY }}
          VITE_POSTHOG_HOST=${{ vars.VITE_POSTHOG_HOST }}
          EOF

      # This step is temporarily forced into success because getting linting under control is
      # low priority. When https://github.com/thunderbird/send-suite/issues/253 is resolved,
      # remove the ` || true` bit below.
      - name: Frontend lint
        id: frontend-lint
        shell: bash
        run: |
          cd frontend
          pnpm ci:validate ||  true
