name: Test Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.4

      - name: Install dependencies
        run: pnpm install

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: Combine coverage reports
        run: |
          mkdir -p combined-coverage
          cp -r packages/send/frontend/coverage/* combined-coverage/
          cp -r packages/send/backend/coverage/* combined-coverage/
          cp -r packages/send/coverage/* combined-coverage/

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: combined-coverage
          retention-days: 7

      - name: Upload coverage to GitHub
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read the coverage summary
            const coveragePath = path.join(process.env.GITHUB_WORKSPACE, 'combined-coverage', 'coverage-summary.json');
            const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));

            // Calculate total coverage
            const total = coverage.total;
            const lines = total.lines.pct;
            const statements = total.statements.pct;
            const branches = total.branches.pct;
            const functions = total.functions.pct;

            // Create a comment with coverage information
            const comment = `## Coverage Report

            | Category | Coverage |
            |----------|----------|
            | Lines | ${lines}% |
            | Statements | ${statements}% |
            | Branches | ${branches}% |
            | Functions | ${functions}% |

            Detailed coverage report is available as an artifact.`;

            // Add comment to PR or commit
            if (context.payload.pull_request) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
