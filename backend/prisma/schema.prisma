// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  publicKey String
  // links   Link[]
  items  Item[]
  groups    GroupUser[]
  folders   Folder[]
}

model Group {
  id      Int     @id @default(autoincrement())
  members GroupUser[]
  folder  Folder?
}

model GroupUser {
  groupId Int
  group   Group @relation(fields: [groupId], references: [id])
  userId  Int
  user    User  @relation(fields: [userId], references: [id])

  @@id([groupId, userId])
}

model Folder {
  id        Int           @id @default(autoincrement())
  name      String
  publicKey String
  ownerId   Int
  owner     User          @relation(fields: [ownerId], references: [id])
  groupId   Int           @unique
  group     Group         @relation(fields: [groupId], references: [id])
  items     Item[]
  parentId  Int?
  parent    Folder?       @relation("Nesting", fields: [parentId], references: [id])
  subfolders  Folder[]    @relation("Nesting")
  createdAt DateTime?
  updatedAt DateTime?

  // unique folder names in a folder
  @@unique([name, parentId])
}

// model GroupFolder {
//   groupId   Int
//   group     Group @relation(fields: [groupId], references: [id])
//   folderId  Int
//   folder    Folder  @relation(fields: [folderId], references: [id])

//   @@id([groupId, folderId])
// }

model Item {
  id        Int       @id @default(autoincrement())
  name      String
  folderId  Int
  folder    Folder    @relation(fields: [folderId], references: [id])
  ownerId   Int
  owner     User      @relation(fields: [ownerId], references: [id])

  // unique "file names" in a folder
  @@unique([name, folderId])
}